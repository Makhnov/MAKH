@use 'sass:math';
$space:' ';
$vh:'vh';
$vw:'vw';

html, body {
    margin:0;
    padding:0;
    box-sizing: border-box;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
}

// ROWS
$margin-top:1.5fr;
$main-row:7.5fr;
$margin-bottom:1fr;

// COLUMNS
$margin-left:1fr;
$menu-column:4fr;
$socket-column:3fr;
$gap-column:1fr;
$main-column:6fr;
$margin-right:1fr;

#wall {
    position:absolute;
    z-index: 20;
    background-image: url('../img/murPortfolio.jpg');
    background-size: cover;
    background-position: center;
    height: 100vh;
    width: 100vw;
}

#night {
    position:absolute;
    z-index: 20;
    height: 100vh;
    width: 100vw;
    animation: backgroundStart 2s linear infinite;

}

@keyframes backgroundStart {
    @for $i from 0 through 5 {
        #{(10 * $i) + "%"} {
            background: radial-gradient(
                circle at 5% 5%, 
                rgba(0, 0, 0, 0.95) 0%, 
                rgba(0, 0, 0, (0.95 - (0.03 * $i))) (0.8% * $i), 
                rgba(0, 0, 0, 0.99) 20%, 
                black 100%
            );
        }
    }

    @for $i from 0 through 5 {
        #{50 + (10 * $i) + "%"} {
            background: radial-gradient(
                circle at 5% 5%, 
                rgba(0, 0, 0, 0.95) 0%, 
                rgba(0, 0, 0, (0.8 + (0.03 * $i))) (4% -(0.8% * $i)), 
                rgba(0, 0, 0, 0.99) 20%, 
                black 100%
            );
        }
    }
}

input.socket {
    all: initial;
    margin: 0 !important;
    padding: 0;
    position: absolute;
    z-index: 30;
    height: 100px;
    width: 100px;
    top: calc(5% - 50px);
    left: calc(5% - 50px);
    transform: rotate(180deg);
    background: url("../img/bulb.gif");
    background-size: contain;
    background-position: center;
    border-radius: 50%;
    align-self: center;
    justify-self: center;
    cursor: pointer;
    transition: opacity 1s;

    &:checked {
        opacity: 0;
    }
    &:checked ~ #makh #socket .front, &:checked ~ #makh #socket .back, &:checked ~ #makh #socket .right, &:checked ~ #makh #socket .left {
        animation: socket 2s linear forwards;
    }
    &:checked ~ #makh #socket .top {
        animation: topSocket 2s linear forwards;
    }

    transition: opacity 1s;
}

#makh {
    height: 100vh;
    width: 100vw;
    display: grid;
    grid-template-rows: 
        $margin-top $main-row $margin-bottom;

    grid-template-columns: 
        $margin-left $menu-column $socket-column $gap-column $main-column $margin-right;

    perspective: 1000px;
    perspective-origin:60% 5%;
    transform: rotateX(-10deg) rotateY(-10deg);

    input.menu {
        grid-row: 3;
        grid-column: 2;
        position: relative;
        height: 30px;
        width: 30px;
        align-self: center;
        justify-self: start;
        cursor: pointer;

        @for $i from 1 through 6 {
            &:nth-of-type(#{$i}) {
                left:calc(-10vw + ($i * 40px));
            }
        }        
        
        &.one:checked ~ #menu .one, 
        &.two:checked ~ #menu .two,
        &.three:checked ~ #menu .three,
        &.four:checked ~ #menu .four {
            animation: menu 2s ease-out forwards;
        }
    }
}

#menu {
    position: relative;
    grid-row: 2;
    grid-column: 2;
    height:60vh;
    width:25vw;
    top:15vh;
    transform-style: preserve-3d;
    display: grid;
    row-gap: 1px;
    grid-template-columns: 1vw 15vw 2vw;
    grid-template-rows: 10vh 10vh 10vh 10vh 20vh;
    transition: opacity 1s;

    @for $i from 1 through 4 {
        div:nth-of-type(#{$i}) {
            grid-row: $i;
            z-index: 5 - $i;
        }
    }

    @for $i from 1 through 4 {
        label:nth-of-type(#{$i}) {
            grid-row: $i;

            &:hover ~ div:nth-of-type(#{$i}) {
                left:1vw;
            }
        }
    }

    label {
        position: absolute;
        grid-column: 1 / span 3;
        z-index: 10;
        height: 10vh;
        width: 18vw;
        padding-left:20px;
        transform: translate3d(0, 0, 25px);
        opacity: 0;
        width: calc(18vw - 20px);
        cursor: pointer;
    }

    div {
        position: relative;
        transform-style: preserve-3d;
        grid-column: 1 / span 3;
        height: 10vh;
        width:18vw;
        box-sizing: border-box;
        left:0;
        transition: .5s;

        .menu {
            position: absolute;
            box-sizing: border-box;
            border: 1px solid white;
        }
        
        .front {
            height: 10vh;
            width: 18vw;
            padding-left:20px;
            transform: translate3d(0, 0, 25px);
            background-color: rgb(0, 26, 81);
            display: grid;
            align-content: center;
            color: whitesmoke;
            font-size: 2.5vw;
            text-transform: uppercase;        
        }
        .back {
            height: 10vh;
            width: 18vw;
            transform: translate3d(0, 0, -25px);
            background-color: rgb(0, 26, 81);
        }

        .right {
            height: 10vh;
            width: 50px;
            transform:translate3d(calc(18vw - 25px), 0, 0) rotateY(90deg);
            background-color: rgb(0, 26, 81);
        }
        .left {
            height: 10vh;
            width: 50px;
            transform:translate3d(-25px, 0, 0) rotateY(90deg);
            background-color: rgb(0, 26, 81);
        }

        .top {
            height: 50px;
            width: 18vw;
            transform:translate3d(0, -25px, 0) rotateX(90deg);
            background-color: rgb(0, 26, 81);
        }
        .bottom {
            height: 50px;
            width: 18vw;
            transform:translate3d(0, calc(10vh - 25px), 0) rotateX(90deg);
            background-color: rgb(0, 26, 81);
        }
    }
}

#socket {
    position: relative;
    grid-row: 2;
    grid-column: 3;
    height: 100%;
    width:100%;
    transform-style: preserve-3d;
    z-index: 5;
    
    .socket {
        position: absolute;
        left:20%;
        bottom:0;
        box-sizing: border-box;
        background-color: rgb(0, 26, 81);
        border: 1px solid white;
        transition: 2s;
    }

    .front {
        height: 0;
        width: 50px;
        transform: translate3d(0%, 0%, 25px);
    }
    .back {
        height: 0;
        width: 50px;
        transform: translate3d(0%, 0%, -25px);
    }

    .right {
        height: 0;
        width: 50px;
        transform:translate3d(25px, 0%, 0) rotateY(90deg);
    }
    .left {
        height: 0;
        width: 50px;
        transform:translate3d(-25px, 0%, 0) rotateY(90deg);
    }

    .top {
        height: 50px;
        width: 50px;
        transform:translate3d(0%, 25px, 0) rotateX(90deg);
    }
}

@keyframes socket {
    from {
        height: 0;    
    }

    to {
        height: 60vh;
    }
}

@keyframes topSocket {
    0% {
        transform:translate3d(0, 25px, 0) rotateX(90deg);
    }


    100% {
        transform:translate3d(0, calc(25px - 60vh), 0) rotateX(90deg);
    }
}

@keyframes menu {
    from {
        left:1vw;
    }
    to {
        left:5.3vw;
    }   
}
